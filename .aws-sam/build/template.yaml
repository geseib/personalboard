AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Personal Board - A tool for managing your personal board of directors

  '
Parameters:
  DomainName:
    Type: String
    Default: board.seibtribe.us
    Description: The domain name for the website
  HostedZoneId:
    Type: String
    Description: The Route 53 hosted zone ID for the domain
  Environment:
    Type: String
    Default: production
    AllowedValues:
    - development
    - production
    Description: The deployment environment
Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${DomainName}-${Environment}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
      - Key: Project
        Value: PersonalBoard
      - Key: Environment
        Value:
          Ref: Environment
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name:
          Fn::Sub: ${DomainName}-oac
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Ref: DomainName
      ValidationMethod: DNS
      DomainValidationOptions:
      - DomainName:
          Ref: DomainName
        HostedZoneId:
          Ref: HostedZoneId
      Tags:
      - Key: Project
        Value: PersonalBoard
      - Key: Environment
        Value:
          Ref: Environment
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: S3Origin
          DomainName:
            Fn::GetAtt:
            - WebsiteBucket
            - RegionalDomainName
          S3OriginConfig:
            OriginAccessIdentity: ''
          OriginAccessControlId:
            Fn::GetAtt:
            - OriginAccessControl
            - Id
        Enabled: true
        HttpVersion: http2and3
        DefaultRootObject: index.html
        Aliases:
        - Ref: DomainName
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: S3Origin
          SmoothStreaming: false
          Compress: true
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          ResponseHeadersPolicyId: 67f7725c-6f97-4210-82d7-5512b31e9d03
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn:
            Ref: SSLCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        CustomErrorResponses:
        - ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
        - ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
        Comment:
          Fn::Sub: Personal Board - ${Environment}
      Tags:
      - Key: Project
        Value: PersonalBoard
      - Key: Environment
        Value:
          Ref: Environment
  DNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Ref: HostedZoneId
      Name:
        Ref: DomainName
      Type: A
      AliasTarget:
        DNSName:
          Fn::GetAtt:
          - CloudFrontDistribution
          - DomainName
        HostedZoneId: Z2FDTNDATAQYW2
Outputs:
  WebsiteURL:
    Description: URL for the website
    Value:
      Fn::Sub: https://${DomainName}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-WebsiteURL
  BucketName:
    Description: Name of the S3 bucket
    Value:
      Ref: WebsiteBucket
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-BucketName
  DistributionId:
    Description: CloudFront Distribution ID
    Value:
      Ref: CloudFrontDistribution
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DistributionId
  DistributionDomainName:
    Description: CloudFront Distribution Domain Name
    Value:
      Fn::GetAtt:
      - CloudFrontDistribution
      - DomainName
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-DistributionDomainName
